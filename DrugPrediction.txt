{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.7.12","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"markdown","source":"# Decision Tree for Medical Drug Prediction\n\n#### Using previous medical data to predict what drug a patient would need based upon the previous data.\n\nDataset csv can be found here: https://www.kaggle.com/prathamtripathi/drug-classification.\nProject based in IBM Decision Trees Lab for the course Machine Learning with Python. The columns and first five rows can be viewed below:","metadata":{"execution":{"iopub.status.busy":"2022-02-07T04:29:48.195883Z","iopub.execute_input":"2022-02-07T04:29:48.196183Z","iopub.status.idle":"2022-02-07T04:29:48.228199Z","shell.execute_reply.started":"2022-02-07T04:29:48.196149Z","shell.execute_reply":"2022-02-07T04:29:48.227609Z"}}},{"cell_type":"code","source":"import pandas as pd\nimport numpy as np\nfrom sklearn.model_selection import train_test_split, cross_validate\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n%matplotlib inline\n\ndata=pd.read_csv(r'/kaggle/input/drug-classification/drug200.csv')\n\n#FIND MISSING DATA:\nfindNA=data.isnull().sum().sort_values(ascending=False)/len(data)\nprint(findNA) #There are no missing values.","metadata":{"execution":{"iopub.status.busy":"2022-02-08T04:25:43.448161Z","iopub.execute_input":"2022-02-08T04:25:43.448716Z","iopub.status.idle":"2022-02-08T04:25:43.467399Z","shell.execute_reply.started":"2022-02-08T04:25:43.448674Z","shell.execute_reply":"2022-02-08T04:25:43.466495Z"},"trusted":true},"execution_count":33,"outputs":[]},{"cell_type":"markdown","source":"## Split Data","metadata":{}},{"cell_type":"code","source":"print(data.head())\n\n#SPLIT DATA:\nX=data.drop('Drug', axis=1)\ny=data['Drug']","metadata":{"execution":{"iopub.status.busy":"2022-02-08T04:25:43.469158Z","iopub.execute_input":"2022-02-08T04:25:43.469974Z","iopub.status.idle":"2022-02-08T04:25:43.478977Z","shell.execute_reply.started":"2022-02-08T04:25:43.469939Z","shell.execute_reply":"2022-02-08T04:25:43.477977Z"},"trusted":true},"execution_count":34,"outputs":[]},{"cell_type":"markdown","source":"### Encode Categorical Variables","metadata":{}},{"cell_type":"code","source":"import category_encoders as ce\n\n# encode variables with ordinal encoding\nencoder = ce.OrdinalEncoder(cols=X.columns)\n\nX_train = encoder.fit_transform(X_train)\nX_test = encoder.transform(X_test)\n\nX_train.head()","metadata":{"execution":{"iopub.status.busy":"2022-02-08T04:25:43.480618Z","iopub.execute_input":"2022-02-08T04:25:43.481400Z","iopub.status.idle":"2022-02-08T04:25:43.524599Z","shell.execute_reply.started":"2022-02-08T04:25:43.481363Z","shell.execute_reply":"2022-02-08T04:25:43.523677Z"},"trusted":true},"execution_count":35,"outputs":[]},{"cell_type":"markdown","source":"## DecisionTreeClassifier\nModel accuracy score with criterion gini index: 0.5667","metadata":{}},{"cell_type":"code","source":"from sklearn.tree import DecisionTreeClassifier\n\nclf_gini = DecisionTreeClassifier(criterion='gini', max_depth=3, random_state=0)\nclf_gini.fit(X_train, y_train)\ny_pred_gini = clf_gini.predict(X_test)\n\n# Check accuracy score with criterion gini index\nfrom sklearn.metrics import accuracy_score\n\nprint('Model accuracy score with criterion gini index: {0:0.4f}'. format(accuracy_score(y_test, y_pred_gini)))","metadata":{"execution":{"iopub.status.busy":"2022-02-08T04:25:43.526081Z","iopub.execute_input":"2022-02-08T04:25:43.526466Z","iopub.status.idle":"2022-02-08T04:25:43.538269Z","shell.execute_reply.started":"2022-02-08T04:25:43.526400Z","shell.execute_reply":"2022-02-08T04:25:43.537440Z"},"trusted":true},"execution_count":36,"outputs":[]},{"cell_type":"markdown","source":"### Useful Resources:\n* https://www.kaggle.com/prashant111/decision-tree-classifier-tutorial\n* https://www.datacamp.com/community/tutorials/decision-tree-classification-python","metadata":{}}]}